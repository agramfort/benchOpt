parameters:
  name: ''
  vmImage: ''
  matrix: []

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  variables:
    VIRTUALENV: 'testvenv'
    JUNITXML: 'test-data.xml'
  strategy:
    matrix:
      ${{ insert }}: ${{ parameters.matrix }}

  steps:
    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: Add conda to PATH
      condition: eq(variables['PACKAGER'], 'conda')
    - script: |
        continuous_integration/install.sh
      displayName: 'Install'
    - script: |
        continuous_integration/test_script.sh
      displayName: 'Test Benchopt'
    - script: |
        continuous_integration/coverage_script.sh
      displayName: 'Send coverage'
    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '$(JUNITXML)'
        testRunTitle: ${{ format('{0}-$(Agent.JobName)', parameters.name) }}
      displayName: 'Publish Test Results'
      condition: succeededOrFailed()
    # - script: |
    #     continuous_integration/upload_codecov.sh
    #   condition: and(succeeded(), eq(variables['COVERAGE'], 'true'), eq(variables['PACKAGER'], 'conda'))
    #   displayName: 'Upload To Codecov'
    #   env:
    #     CODECOV_TOKEN: $(CODECOV_TOKEN)
